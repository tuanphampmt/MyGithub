{"version":3,"sources":["components/Header.js","components/Search.js","components/TableDataRow.js","components/TableData.js","components/AddUserForm.js","components/EditUserForm.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Search","props","displayButton","formStatus","onClick","isFormStatus","isChange","event","setState","tempValue","target","value","getTextSearch","onClickSearch","state","isSearchStatus","href","type","name","placeholder","onChange","this","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","status","sortAscStatus","isSortAscStatus","sortDescStatus","isSortDescStatus","adminStatus","isAdminStatus","moderatorStatus","isModeratorStatus","normalStatus","isNormalStatus","TableDataRow","postData","a","axios","post","checkPermissions","parseInt","permissions","editClick","editUser","changeEditUserStatus","onSubmit","preventDefault","getUserRemovedInfo","STT","telephone","TableData","data","map","user","i","key","_id","dataSort","AddUserForm","e","newUser","getNewDataUser","displayForm","style","maxWidth","EditUserForm","item","getUserEditInfo","editUserStatus","to","color","defaultValue","userEditObject","App","getData","get","dataUser","getArray","arr","forEach","toLowerCase","indexOf","searchText","push","filter","sort","b","dl","trim","tel","per","find","idUser","tempData","searchStatus","then","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09a70e0f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container text-center\">\n                    <h1 className=\"display-3\">Project quản lý thành viên bằng MongoDB-Expressjs-Reactjs-Nodejs</h1>\n                    <hr className=\"my-2\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tempValue: \"\"\n        }\n    }\n\n    displayButton = () => {\n        if (this.props.formStatus) {\n            return <div className=\"btn btn-success btn-block add\" onClick={() => this.props.isFormStatus()}><i\n                className=\"fa fa-times-circle mr-2\"/>Đóng lại</div>\n        }\n        return <div className=\"btn btn-success btn-block add\" onClick={() => this.props.isFormStatus()}><i\n            className=\"fa fa-user-plus mr-1\"/>Thêm mới</div>\n    };\n    isChange = (event) => {\n        this.setState({\n            tempValue: event.target.value\n        });\n        this.props.getTextSearch(event.target.value);\n\n    };\n    onClickSearch = () => {\n        this.props.getTextSearch(this.state.tempValue);\n        this.props.isSearchStatus();\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"col-12\">\n                    <div className=\"form-group\">\n                        <div className=\"btn-group\">\n                            <a href=\"#1\" onClick={() => this.onClickSearch()}>\n                                <input\n                                    className=\"form-control inputSearch\"\n                                    type=\"text\"\n                                    name=\"seach\"\n                                    placeholder=\"Nhập tên cần tìm\"\n                                    onChange={event => this.isChange(event)}\n                                />\n                            </a>\n                            <button className=\"btn btn-primary\"\n                                    onClick={() => this.onClickSearch()}><i\n                                className=\"fa fa-search mr-1\"/>Tìm\n\n                            </button>\n                            {this.displayButton()}\n                            <div className=\"dropdown\">\n                                <button className=\"btn btn-primary dropdown-toggle ml-3\" type=\"button\"\n                                        id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                        aria-expanded=\"false\">\n                                    Sắp xếp\n                                </button>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                    <a className={\"dropdown-item \" + (this.props.status.sortAscStatus ? \"sort_selected\" : \"\")}\n                                       href=\"#1\"\n                                       onClick={() => this.props.isSortAscStatus()}\n                                    >\n                                        <span className=\"fa fa-sort-alpha-asc\">Tên A-Z</span>\n                                    </a>\n                                    <a className={\"dropdown-item \" + (this.props.status.sortDescStatus ? \"sort_selected\" : \"\")}\n                                       href=\"#1\"\n                                       onClick={() => this.props.isSortDescStatus()}\n                                    >\n                                        <span className=\"fa fa-sort-alpha-desc\">Tên Z-A</span>\n                                    </a>\n                                    <hr/>\n                                    <a className={\"dropdown-item \" + (this.props.status.adminStatus ? \"sort_selected\" : \"\")}\n                                       href=\"#1\"\n                                       onClick={() => this.props.isAdminStatus()}\n                                    ><span className=\"fa\">Admin</span></a>\n                                    <a className={\"dropdown-item \" + (this.props.status.moderatorStatus ? \"sort_selected\" : \"\")}\n                                       href=\"#1\"\n                                       onClick={() => this.props.isModeratorStatus()}\n                                    ><span className=\"fa\">Moderator</span></a>\n                                    <a className={\"dropdown-item \" + (this.props.status.normalStatus ? \"sort_selected\" : \"\")}\n                                       href=\"#1\"\n                                       onClick={() => this.props.isNormalStatus()}\n                                    ><span className=\"fa\">Normal User</span></a>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, {Component} from \"react\";\nimport axios from \"axios\";\n\nclass TableDataRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\"\n        }\n    }\n\n    postData = async (id) => await axios.post(\"/api/delete/\" + id);\n    checkPermissions = () => {\n        if (parseInt(this.props.permissions) === 1) {\n            return \"Admin\";\n        } else if (parseInt(this.props.permissions) === 2) {\n            return \"Moderator\";\n        }\n        return \"Normal User\";\n    };\n\n    editClick = async () => {\n        this.props.editUser();\n        this.props.changeEditUserStatus();\n    };\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.getUserRemovedInfo();\n        (async () => {\n            await this.postData(this.props.id);\n        })()\n\n    };\n    render() {\n        return (\n            <tr>\n                <td>{this.props.STT + 1}</td>\n                <td>{this.props.name}</td>\n                <td>{this.props.telephone}</td>\n                <td className=\"text-center\"><p\n                    className={\"label \" + (this.checkPermissions() === \"Admin\" ? \"label-danger\" : this.checkPermissions() === \"Moderator\" ? \"label-warning\" : \"label-info\")}>{this.checkPermissions()}</p>\n                </td>\n                <td>\n                    <div className=\"btn-group\">\n                        <button\n                            className=\"btn btn-success\"\n                            onClick={() => this.editClick()}\n                        >\n                            <i className=\"fa fa-edit\"/> Sửa\n                        </button>\n\n                        <button type=\"submit\"\n                                className=\"btn btn-danger\"\n                                onClick={(event) => this.onSubmit(event)}\n                        >\n                            <i className=\"fa fa-remove\"/> Xoá\n                        </button>\n\n\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default TableDataRow;\n","import React, {Component} from 'react';\nimport TableDataRow from \"./TableDataRow\";\n\nclass TableData extends Component {\n\n\n    render() {\n        // console.log(this.props.data._id)\n        return (\n            <div className=\"col\">\n                <table className=\"table table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <th>STT</th>\n                        <th>Tên</th>\n                        <th>Điện thoại</th>\n                        <th>Quyền</th>\n                        <th>Thao tác</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.props.data.map((user, i) => (\n                            <TableDataRow\n                                key={i}\n                                id={user._id}\n                                name={user.name}\n                                telephone={user.telephone}\n                                permissions={user.permissions}\n                                STT={i}\n                                editUser={() => this.props.editUser(user)}\n                                changeEditUserStatus={() => this.props.changeEditUserStatus()}\n                                getUserRemovedInfo={() => this.props.getUserRemovedInfo(user._id)}\n                                dataSort={this.props.dataSort}\n                            />\n                        ))\n                    }\n                    </tbody>\n                </table>\n            </div>\n\n        );\n    }\n}\n\nexport default TableData;","import React, {Component} from 'react';\nimport axios from \"axios\";\n// const postData = async (name, telephone, permissions) => await axios.post(\"/api/add\", {name, telephone, permissions });\nclass AddUserForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            name: \"\",\n            telephone: \"\",\n            permissions:\"\"\n        }\n    }\n    postData = async (name, telephone, permissions) => await axios.post(\"/api/add\", {name, telephone, permissions });\n\n    isChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n    onSubmit = async (e) =>{\n        e.preventDefault();\n        const newUser =  await this.postData(this.state.name, this.state.telephone, this.state.permissions);\n        this.props.getNewDataUser(newUser.data.newUser._id, this.state.name, this.state.telephone, this.state.permissions);\n        this.setState({\n            name: \"\",\n            telephone: \"\",\n            permissions:\"\"\n        })\n\n    }\n    displayForm = () => {\n        if (this.props.formStatus) {\n            return (\n                <div className=\"col\">\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"card border-info mt-3\" style={{maxWidth: \"18rem\"}}>\n                            <div className=\"card-header bg-transparent border-info text-center\">\n                                <strong>Thêm mới</strong>\n                            </div>\n                            <div className=\"card-body text-info\">\n                                <div className=\"from-group\">\n                                    <div>\n                                        <label>Tên user</label>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            name=\"name\"\n                                            placeholder=\"Nhập tên user\"\n                                            onChange={(event) => this.isChange(event)}\n                                            value={this.state.name}\n                                        />\n                                    </div>\n                                    <div className=\"mt-3\">\n                                        <label>Điện thoại</label>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            name=\"telephone\"\n                                            placeholder=\"Nhập điện thoại\"\n                                            onChange={(event) => this.isChange(event)}\n                                            value={this.state.telephone}\n                                        />\n                                    </div>\n                                    <div className=\"mt-3\">\n                                        <label>Phân quyền</label>\n                                        <select className=\"custom-select mr-sm-2\"\n                                                onChange={(event) => this.isChange(event)}\n                                                name=\"permissions\"\n                                                value={this.state.permissions}\n                                        >\n                                            <option>Choose...</option>\n                                            <option value=\"1\">Admin</option>\n                                            <option value=\"2\">Moderator</option>\n                                            <option value=\"3\">Normal</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"mt-3 text-center\">\n                                        <button type=\"submit\" className=\"btn btn-outline-info btn-block\">\n                                            Thêm mới\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            )\n        }\n    };\n\n    render() {\n\n        return (\n            <div>\n                {this.displayForm()}\n            </div>\n        );\n    }\n}\n\nexport default AddUserForm;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {NavLink} from \"react-router-dom\"\nclass EditUserForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: \"\",\n\t\t\tname: \"\",\n\t\t\ttelephone: \"\",\n\t\t\tpermissions: \"\",\n\t\t};\n\t}\n\tpostData = async (id ,name, telephone, permissions) => await axios.post(\"/api/update/\" + id, {name, telephone, permissions})\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\treturn{\n\t\t\tid: props.userEditObject._id,\n\t\t\tname: props.userEditObject.name,\n\t\t\ttelephone: props.userEditObject.telephone,\n\t\t\tpermissions: props.userEditObject.permissions\n\t\t};\n\t}\n\tisChange = (event) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\teditClick = async (event) => {\n\t\tevent.preventDefault();\n\t\tlet item = {\n\t\t\tid: this.state.id,\n\t\t\tname: this.state.name,\n\t\t\ttelephone: this.state.telephone,\n\t\t\tpermissions: this.state.permissions\n        };\n        \n\t\tthis.props.getUserEditInfo(item);\n        this.props.changeEditUserStatus();\n        await this.postData(this.state.id, this.state.name, this.state.telephone, this.state.permissions)\n\t};\n\n\tdisplayForm = () => {\n\t\tif (this.props.editUserStatus) {\n\t\t\treturn (\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t<form onSubmit={this.editClick}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"card border-success mt-3\"\n\t\t\t\t\t\t\tstyle={{ maxWidth: \"18rem\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"card-header bg-success border-success text-center\">\n\t\t\t\t\t\t\t\t<strong>Sửa thông tin</strong>\n\t\t\t\t\t\t\t\t<NavLink to=\"/\" style={{color: \"#fff\"}}>\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-times-circle text-right\"\n\t\t\t\t\t\t\t\t\t   onClick={() => this.props.changeEditUserStatus()}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-body text-success\">\n\t\t\t\t\t\t\t\t<div className=\"from-group\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>Tên user</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nhập tên user\"\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.props.userEditObject.name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.isChange(event)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mt-3\">\n\t\t\t\t\t\t\t\t\t\t<label>Điện thoại</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"telephone\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nhập điện thoại\"\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.props.userEditObject.telephone}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.isChange(event)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mt-3\">\n\t\t\t\t\t\t\t\t\t\t<label>Phân quyền</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-select mr-sm-2\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"permissions\"\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.props.userEditObject.permissions}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.isChange(event)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<option>Choose...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">Admin</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">Moderator</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">Normal</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mt-3 text-center\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-success btn-block\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => this.editClick(event)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLưu\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\n\n\t\treturn <div>{this.displayForm()}</div>;\n\t}\n}\n\nexport default EditUserForm;\n","import React, {Component} from \"react\";\nimport \"../stylesheets/App.css\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport TableData from \"./TableData\";\nimport AddUserForm from \"./AddUserForm\";\nimport EditUserForm from \"./EditUserForm\";\nimport axios from \"axios\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            searchText: \"\",\n            userEditObject: {},\n            status: {\n                editUserStatus: false,\n                formStatus: false,\n                sortAscStatus: false,\n                sortDescStatus: false,\n                searchStatus: false,\n                adminStatus: false,\n                moderatorStatus: false,\n                normalStatus: false\n\n            }\n        };\n    }\n\n    getData = async () => (await (await axios.get(\"/api/user\")).data).dataUser;\n\n    componentDidMount() {\n        this.getData().then((data) => this.setState({data: data}));\n    }\n\n    getArray = () => {\n        let arr = [];\n        let {sortAscStatus, sortDescStatus, adminStatus, moderatorStatus, normalStatus} = this.state.status;\n\n        if (sortAscStatus && !sortDescStatus && !adminStatus && !moderatorStatus && !normalStatus) {\n            arr = this.state.data;\n            return arr.sort((a, b) =>\n                a.name.toLowerCase() !== b.name.toLowerCase()\n                    ? a.name.toLowerCase() < b.name.toLowerCase()\n                    ? -1\n                    : 1\n                    : 0\n            );\n        }\n        if (!sortAscStatus && sortDescStatus && !adminStatus && !moderatorStatus && !normalStatus) {\n            arr = this.state.data;\n            return arr.sort((a, b) =>\n                a.name.toLowerCase() !== b.name.toLowerCase()\n                    ? a.name.toLowerCase() > b.name.toLowerCase()\n                    ? -1\n                    : 1\n                    : 0\n            );\n        }\n        if (!sortAscStatus && !sortDescStatus && adminStatus && !moderatorStatus && !normalStatus) {\n            return this.state.data.filter((item) => item.permissions === 1)\n        }\n        if (!sortAscStatus && !sortDescStatus && !adminStatus && moderatorStatus && !normalStatus) {\n            return this.state.data.filter((item) => item.permissions === 2)\n        }\n        if (!sortAscStatus && !sortDescStatus && !adminStatus && !moderatorStatus && normalStatus) {\n            return this.state.data.filter((item) => item.permissions === 3)\n        }\n        this.state.data.forEach((item) => {\n            if (item.name.toLowerCase().indexOf(this.state.searchText) !== -1) {\n                arr.push(item);\n            }\n        });\n        return arr;\n    };\n\n    getTextSearch = (dl) => {\n        this.setState({searchText: dl.toLowerCase().trim()});\n    };\n\n    isFormStatus = () => {\n        this.setState({\n            status: {\n                formStatus: !this.state.status.formStatus\n            }\n        });\n    };\n\n    getNewDataUser = (id, name, tel, per) => {\n        let item = {\n            _id: id,\n            name: name,\n            telephone: tel,\n            permissions: per\n        };\n        this.state.data.push(item);\n        this.setState({data: this.state.data});\n    };\n\n    editUser = (user) => {\n        this.setState({userEditObject: user});\n    };\n\n    changeEditUserStatus = () => {\n        this.setState({\n            status: {\n                editUserStatus: !this.state.status.editUserStatus\n            }\n        });\n    };\n\n    getUserEditInfo = (item) => {\n        let user = this.state.data.find((user) => user._id === item.id);\n        user.name = item.name;\n        user.telephone = item.telephone;\n        user.permissions = item.permissions;\n    };\n\n    getUserRemovedInfo = (idUser) => {\n        let tempData = this.state.data.filter((item) => item._id !== idUser);\n        this.setState({\n            data: tempData\n        });\n    };\n    isSortAscStatus = () => {\n        this.setState({\n            status: {\n                sortAscStatus: true,\n                sortDescStatus: false,\n                adminStatus: false,\n                moderatorStatus: false,\n                normalStatus: false\n            }\n        });\n    };\n    isSortDescStatus = () => {\n        this.setState({\n            status: {\n                sortDescStatus: true,\n                sortAscStatus: false,\n                adminStatus: false,\n                moderatorStatus: false,\n                normalStatus: false\n            }\n        });\n    };\n    isAdminStatus = () => {\n        this.setState({\n            status: {\n                adminStatus: true,\n                sortAscStatus: false,\n                sortDescStatus: false,\n                moderatorStatus: false,\n                normalStatus: false\n\n            }\n        });\n    };\n    isModeratorStatus = () => {\n        this.setState({\n            status: {\n                moderatorStatus: true,\n                sortAscStatus: false,\n                sortDescStatus: false,\n                adminStatus: false,\n                normalStatus: false\n\n            }\n        });\n    };\n    isNormalStatus = () => {\n        this.setState({\n            status: {\n                normalStatus: true,\n                sortAscStatus: false,\n                sortDescStatus: false,\n                adminStatus: false,\n                moderatorStatus: false,\n\n            }\n        });\n    };\n    isSearchStatus = () => {\n        this.setState({\n            status: {\n                searchStatus: true,\n                sortAscStatus: false,\n                sortDescStatus: false,\n                adminStatus: false,\n                moderatorStatus: false,\n                normalStatus: false\n            }\n        });\n    };\n\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Header/>\n                    <div className=\"searchForm\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <Search\n                                    isFormStatus={() => this.isFormStatus()}\n                                    formStatus={this.state.status.formStatus}\n                                    getTextSearch={(dl) => this.getTextSearch(dl)}\n                                    isSortAscStatus={() => this.isSortAscStatus()}\n                                    isSortDescStatus={() => this.isSortDescStatus()}\n                                    isSearchStatus={() => this.isSearchStatus()}\n                                    isAdminStatus={() => this.isAdminStatus()}\n                                    isModeratorStatus={() => this.isModeratorStatus()}\n                                    isNormalStatus={() => this.isNormalStatus()}\n                                    status={this.state.status}\n\n                                />\n                                <div className=\"col-12\">\n                                    <hr/>\n                                </div>\n                                <TableData\n                                    data={this.getArray()}\n                                    editUser={(user) => this.editUser(user)}\n                                    changeEditUserStatus={() => this.changeEditUserStatus()}\n                                    getUserRemovedInfo={(idUser) => this.getUserRemovedInfo(idUser)}\n                                />\n                                <AddUserForm\n                                    formStatus={this.state.status.formStatus}\n                                    getNewDataUser={(id, name, tel, per) => this.getNewDataUser(id, name, tel, per)}\n                                />\n                                <EditUserForm\n                                    editUserStatus={this.state.status.editUserStatus}\n                                    changeEditUserStatus={() => this.changeEditUserStatus()}\n                                    userEditObject={this.state.userEditObject}\n                                    getUserEditInfo={(item) => this.getUserEditInfo(item)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}